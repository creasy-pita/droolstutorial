package rules.bigobj
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
global com.alibaba.fastjson.JSONObject $obj
//带组合实体的集合验证 + 简单实体的第一层属性的验证

rule "大对象集合校验"
    when
//        eval(collectionHandle($obj, "f.boys.age",">","0")  && collectionHandle($obj, "产权.boys.age",">","0"))
        eval(collectionHandle($obj, "f.boys.age",">","0")  && collectionHandle($obj, "产权.boys.age",">","0") &&  $obj.getString("name") !="" )
    then

end

// combine.lista.age > 2 需要解读为遍历listb .age> 2
//combine.lista.listb.age>2 需要解读为 遍历lista，再遍历listb .age> 2
// 需要能够传入路径参数  先满足二层的情形, todo 多层待实现
//需要能够传入比较符， 比如 字符串 <>''，数值类 ><=... todo 满足不同比较功能的通用类
//需要能够解析 带路径的objkeys todo 需要drl 和调用drl两边配置实现。 考虑性能和简洁程度
function java.lang.Boolean collectionHandle(com.alibaba.fastjson.JSONObject gObj,String namePath,String compareOperator,String rightOperand){
  if (gObj== null) {
    return false;
  }
  String ruleName = "规则名称1";

  //获取f.boys
  String[] pathArr = namePath.split("\\.");
  if(pathArr.length < 2)return false;

  com.alibaba.fastjson.JSONArray arr = gObj.getJSONObject(pathArr[0]).getJSONArray(pathArr[1]);
  String fieldName = pathArr[2];

  //objkeys获取f.boys的部分

  //判断f.boys.age>2
  boolean re = true;

  com.alibaba.fastjson.JSONArray valueOfObjKeyArr = new com.alibaba.fastjson.JSONArray();
  com.alibaba.fastjson.JSONArray valueOffield = new com.alibaba.fastjson.JSONArray();

  for(Object obj : arr){
    com.alibaba.fastjson.JSONObject boy = (com.alibaba.fastjson.JSONObject)obj;
    // todo 需要编写通用的比较功能类，适配不同的情况，这里是大于
    if(compareOperator == ">")
    {
        //如果校验不成功，保存信息的复合主键信息 到$obj
        if(!(boy.getIntValue(fieldName) > java.lang.Integer.parseInt(rightOperand))){
          re = false;
          //@todo values of objkeys的组装
          valueOffield.add(boy.getIntValue(fieldName));
        }
    }
    else if(compareOperator =="<"){
        //如果校验不成功，保存信息的复合主键信息 到$obj
        if(!(boy.getIntValue(fieldName) < java.lang.Integer.parseInt(rightOperand))){
          re = false;
          //@todo values of objkeys的组装
          valueOffield.add(boy.getIntValue(fieldName));
        }
    }
  }
    System.out.println("------------11--------");
    System.out.println("-------------11-------");
  // todo 行不同，需要在 then clause中才能更新global variable
  gObj.put(ruleName+"@@"+namePath,valueOffield);
  return re;
}



