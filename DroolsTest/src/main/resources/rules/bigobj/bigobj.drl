package rules.bigobj
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
global com.alibaba.fastjson.JSONObject $obj
//带组合实体的集合验证 + 简单实体的第一层属性的验证

//rule "大对象集合校验"
//    when
////        eval(collectionHandle($obj, "f.boys.age",">","0")  && collectionHandle($obj, "产权.boys.age",">","0"))
//        eval( collectionHandle($obj, "f.boys.age",">","0")  && collectionHandle($obj, "产权.boys.age",">","0") &&  $obj.getString("name") !="" )
//    then
//
//end
//
//rule "大对象集合校验withexternalJavaFunction"
//    when
//        eval(new com.function.CollectFunction().isPositive(1) && validtePropertyCertNumber("1111"))
////        eval(collectionHandle($obj, "f.boys.age",">","0")  && collectionHandle($obj, "产权.boys.age",">","0"))
//        eval( collectionHandle($obj, "f.boys.age",">","0")  && collectionHandle($obj, "产权.boys.age",">","0") &&  $obj.getString("name") !="" )
//    then
//
//end
//
//rule "大对象集合校验v2"
//    when
//        eval( new com.function.CollectFunction().collectionHandle($obj, "f.boys.age", "java.lang.Integer","<","18") )
//    then
//
//end
//rule "schoolForm-boys-年龄"
//    when
//        eval(new com.function.CollectFunction().collectionHandle($obj, "boys.age", "java.util.List,java.lang.String",">","18","","schoolForm-boys-年龄"))
//    then
//end

//rule "大对象集合校验-双层或多层集合属性"
//    when
////        eval(new com.function.CollectFunction().collectionHandle($obj, "boys.scoreReports.score", "java.lang.Integer","<","50") )
////        eval(new com.function.CollectFunction().collectionHandle($obj, "boys.scoreReports.score", "java.util.List,java.util.List,java.lang.Integer",">,<","90,50","or","大对象集合校验-双层或多层集合属性") )
////        eval(new com.function.CollectFunction().collectionHandle($obj, "boys.scoreReports.score", "java.util.List,java.util.List,java.lang.Integer",">","80","","大对象集合校验-双层或多层集合属性") )
////        eval(new com.function.CollectFunction().collectionHandle($obj, "boys.age", "java.util.List,java.lang.String","<","18","","大对象集合校验-双层或多层集合属性") )
//        eval(new com.function.CollectFunction().collectionFieldCompare($obj, "boys.scoreReports.score", "java.util.List,java.util.List,java.math.BigDecimal","==empty","","大对象向导规则测试02"))
//    then
//end


//rule "大对象向导规则测试02"
//when
//eval((new com.function.CollectFunction().collectionFieldCompare($obj, "boys.scoreReports.score", "java.util.List,java.util.List,java.math.BigDecimal",">","80","大对象向导规则测试02") && new com.function.CollectFunction().collectionFieldCompare($obj, "boys.scoreReports.IsPublic", "java.util.List,java.util.List,java.lang.Boolean",">","1","大对象向导规则测试02")))
//then
//
//end

//rule "实体字段复合表达式测试"
//when
//eval(new com.function.CollectFunction().oneCollectionMultiFieldCompare($obj, "boys.scoreReports", "java.util.List,java.util.List", "subject!@@!java.lang.String!@@!==!@@!math-@@-IsPublic!@@!java.lang.Boolean!@@!==true!@@!-@@-&&score!@@!java.math.BigDecimal!@@!>!@@!60-@@-&&-@@-subject!@@!java.lang.String!@@!==!@@!English-@@-score!@@!java.math.BigDecimal!@@!>!@@!70-@@-&&-@@-||","实体字段复合表达式测试"))
//then
//
//end

//rule "模式中集合字段和枚举比较"
//when
//eval($obj.getString("borndate").equals("\"11\""))
//then
//end
//rule "实体字段复合表达式测试空比较"
//when
//eval(new com.function.CollectFunction().oneCollectionMultiFieldCompare($obj, "boys.scoreReports", "java.util.List,java.util.List", "subject!@@!java.lang.String!@@!==!@@!11-@@-subject!@@!java.lang.String!@@!==!@@!22-@@-subject!@@!java.lang.String!@@!==!@@!44-@@-&&&&subject!@@!java.lang.String!@@!==!@@!33-@@-&&","实体字段复合表达式测试空比较"))
//then
//
//end

//rule "实体字段复合表达式测试"
//when
//eval(new com.function.CollectFunction().oneCollectionMultiFieldCompare($obj, "boys.scoreReports", "java.util.List,java.util.List", "boys.scoreReports.subject!@@!java.lang.String!@@!==!@@!math-@@-boys.scoreReports.IsPublic!@@!java.lang.Boolean!@@!==true!@@!-@@-&&boys.scoreReports.score!@@!java.math.BigDecimal!@@!>!@@!60-@@-&&boys.scoreReports.subject!@@!java.lang.String!@@!==!@@!English-@@-boys.scoreReports.score!@@!java.math.BigDecimal!@@!>!@@!70-@@-&&||boys.scoreReports.subject!@@!java.lang.String!@@!==!@@!1-@@-||boys.scoreReports.subject!@@!java.lang.String!@@!==!@@!\"48\"-@@-||","实体字段复合表达式测试"))
//then
//
//end
//rule "实1体字段复合表达式测试空比较"
//when
//eval(new com.function.CollectFunction().oneCollectionMultiFieldCompare($obj, "boys.scoreReports", "java.util.List,java.util.List", "subject!@@!java.lang.String!@@!==!@@!11-@@-subject!@@!java.lang.String!@@!==!@@!22-@@-subject!@@!java.lang.String!@@!==!@@!44-@@-&&&&subject!@@!java.lang.String!@@!==!@@!33-@@-&&","实1体字段复合表达式测试空比较"))
//then
//
//end

//rule "同一关联路径下的实体复合表达式"
//when
//eval(( false||(true && true ) ))
//then
//
//end

rule "实体字段复合表达式测试空比较"
when
eval(new com.function.CollectFunction().CompareCollection($obj, "boys.scoreReports", "java.util.List,java.util.List", "boys.scoreReports.subject!@@!java.lang.String!@@!==!@@!11-@@-boys.scoreReports.subject!@@!java.lang.String!@@!==!@@!22-@@-boys.scoreReports.subject!@@!java.lang.String!@@!==!@@!44-@@-&&&&boys.scoreReports.subject!@@!java.lang.String!@@!==!@@!33-@@-&&","实体字段复合表达式测试空比较"))
then

end
rule "同一关联路径下的实体复合表达式"
when
eval(new com.function.CollectFunction().CompareCollection($obj, "boys.scoreReports", "java.util.List,java.util.List", "boys.name!@@!java.lang.String!@@!==!@@!Tom-@@-boys.scoreReports.average!@@!java.math.BigDecimal!@@!>!@@!20-@@-&&boys.name!@@!java.lang.String!@@!==!@@!Creasy-@@-boys.scoreReports.average!@@!java.math.BigDecimal!@@!>!@@!60-@@-&&||","同一关联路径下的实体复合表达式"))
then

end
rule "大对象单个集合属性比较"
when
eval(new com.function.CollectFunction().CompareCollection($obj, "boys", "java.util.List", "boys.name!@@!java.lang.String!@@!==!@@!Creasy-@@-age!@@!java.lang.Integer!@@!==!@@!18-@@-&&","大对象单个集合属性比较"))
then

end

//function java.lang.String getSubstr(java.lang.String arg0,java.lang.Integer arg1) {
function java.lang.Boolean getSubstr(java.lang.String arg0,java.lang.Integer arg1) {
        System.out.println("------------------------getSubstr---------------------------------");
        System.out.println(arg0 + arg1);
        System.out.println("-------------------------getSubstr--------------------------------");
        return true;
//        if (arg0 == null) {
//            return "";
//        } else if (arg0.length() >= arg1) {
//            return arg0.substring(0, arg1);
//        }
//        return "";
}



function java.lang.Boolean setRuleName(com.alibaba.fastjson.JSONObject gObj,String ruleName){
    System.out.println("--------------------------setRuleName-------------------------------");
    System.out.println(ruleName);
    System.out.println("--------------------------setRuleName-------------------------------");
    gObj.put("ruleName", ruleName);
    return true;
}

function java.lang.Boolean validtePropertyCertNumber(java.lang.String arg0) {
        System.out.println("------------------------validtePropertyCertNumber---------------------------------");
        java.lang.String regex = "^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领]（\\d{4}）[\\u4E00-\\u9FA5]{0,15}不动产权第\\d{7}号$";
        if (arg0.matches(regex))return true;
        return false;
}

